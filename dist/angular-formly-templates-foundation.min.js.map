{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-formly-templates-foundation.min.js","webpack:///webpack/bootstrap 822fcbc746ea2245b56e","webpack:///./index.js","webpack:///./index.js?3090","webpack:///./angular-fix/index.js","webpack:///./angular-fix/index.js?c37e","webpack:///./index.common.js","webpack:///./index.common.js?8322","webpack:///./run/addons.js","webpack:///./run/addons.js?eeb4","webpack:///./run/description.js","webpack:///./run/description.js?fdb4","webpack:///./run/index.js","webpack:///./run/index.js?64fd","webpack:///./types/checkbox.js","webpack:///./types/checkbox.js?5496","webpack:///./types/index.js","webpack:///./types/index.js?8c69","webpack:///./types/input.js","webpack:///./types/input.js?51ef","webpack:///./types/multiCheckbox.js","webpack:///./types/multiCheckbox.js?6bf7","webpack:///./types/radio.js","webpack:///./types/radio.js?4b1a","webpack:///./types/select.js","webpack:///./types/select.js?598f","webpack:///./types/textarea.js","webpack:///./types/textarea.js?346d","webpack:///./wrappers/index.js","webpack:///./wrappers/index.js?6166","webpack:///./run/addons.html","webpack:///./types/checkbox.html","webpack:///./types/multiCheckbox.html","webpack:///./types/radio.html","webpack:///./types/select.html","webpack:///./wrappers/has-error.html","webpack:///./wrappers/label.html","webpack:///external \"angular\"","webpack:///external {\"root\":\"apiCheck\",\"amd\":\"api-check\",\"commonjs2\":\"api-check\",\"commonjs\":\"api-check\"}","webpack:///external {\"root\":\"ngFormly\",\"amd\":\"angular-formly\",\"commonjs2\":\"angular-formly\",\"commonjs\":\"angular-formly\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_21__","__WEBPACK_EXTERNAL_MODULE_22__","__WEBPACK_EXTERNAL_MODULE_23__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","angular","version","window","ngModuleName","ngModule","constant","output","prefix","addAddonsManipulator","formlyConfig","formlyFoundationApiCheck","addonTemplate","addonChecker","shape","class","string","optional","text","strict","api","templateOptions","addonLeft","addonRight","templateManipulators","preWrapper","push","template","options","type","warn","replace","$inject","run","addDescriptionManipulator","scope","isDefined","description","el","document","createElement","appendChild","element","modelEls","querySelectorAll","attr","innerHTML","_interopRequire","obj","__esModule","addons","addCheckboxType","formlyConfigProvider","setType","name","wrapper","apiCheck","check","label","config","addInputType","defaultOptions","noFormControl","arrayOf","object","labelProp","valueProp","controller","$scope","setModel","model","opts","key","forEach","multiCheckbox","checked","checkbox","index","to","change","modelValue","isArray","v","indexOf","addRadioType","addSelectType","groupProp","addTextareaType","ngModelAttrs","rows","attribute","cols","number","addWrappers","setWrapper","required","bool"],"mappings":";;CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,WAAAA,QAAA,aAAAA,QAAA,mBACA,kBAAAC,gBAAAC,IACAD,QAAA,wCAAAJ,GACA,gBAAAC,SACAA,QAAA,4BAAAD,EAAAG,QAAA,WAAAA,QAAA,aAAAA,QAAA,mBAEAJ,EAAA,4BAAAC,EAAAD,EAAA,QAAAA,EAAA,SAAAA,EAAA,WACCO,KAAA,SAAAC,EAAAC,EAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAX,OAGA,IAAAC,GAAAW,EAAAD,IACAX,WACAa,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAd,EAAAD,QAAAC,IAAAD,QAAAU,GAGAT,EAAAa,QAAA,EAGAb,EAAAD,QAvBA,GAAAY,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAAST,EAAQD,EAASU,GEtDhC,YCAAT,GAAOD,QAAUU,EAAQ,IH8DnB,SAAST,EAAQD,EAASU,GI5DhC,YCAA,IAAIS,GAAUT,EAAQ,GACjBS,GAAQC,UACXD,EAAUE,OAAOF,SAEnBlB,EAAOD,QAAUmB,GLsEX,SAASlB,EAAQD,EAASU,GM5EhC,YCAA,IAAMY,GAAe,mBACfH,EAAUT,EAAQ,GAClBa,EAAWJ,EAAQlB,OAAOqB,GAAeZ,EAAQ,KACvDa,GAASC,SACP,2BACAd,EAAQ,KACNe,QACEC,OAAQ,gCAIdH,EAASC,SAAS,0BAA2B,gBAE7Cd,EAAQ,IAAca,GACtBb,EAAQ,GAAWa,GACnBb,EAAQ,GAASa,GDCjBtB,EAAOD,QCCQsB,GPiFT,SAASrB,EAAQD,EAASU,GQlGhC,YRsGCT,GAAOD,QAAU,SAAUuB,GSnG1B,QAASI,GAAqBC,EAAcC,GAC1C,GAAIC,GAAgBpB,EAAQ,IACtBqB,EAAeF,EAAyBG,OAC5CC,QAAOJ,EAAyBK,OAAOC,SACvCC,KAAMP,EAAyBK,OAAOC,WACrCE,OAAOF,SACJG,EAAMT,EAAyBG,OACnCO,gBAAiBV,EAAyBG,OACxCQ,UAAWT,EACXU,WAAYV,KAGhBH,GAAac,qBAAqBC,WAAWC,KAAK,SAASC,EAAUC,GACnE,MAAqB,UAAjBA,EAAQC,OAAsBD,EAAQP,gBAAgBC,YAAcM,EAAQP,gBAAgBE,WACvFI,GAEThB,EAAyBmB,MAAMV,IAAOQ,IAC/BhB,EAAcmB,QAAQ,0CAA2CJ,MTmF3ElB,EAAqBuB,SAAW,eAAgB,4BStGjD3B,EAAS4B,IAAIxB,KTiIT,SAAS1B,EAAQD,GUlIvB,YVsICC,GAAOD,QAAU,SAAUuB,GWnI1B,QAAS6B,GAA0BxB,GACjCA,EAAac,qBAAqBC,WAAWC,KAAK,SAAyBC,EAAUC,EAASO,GAC5F,GAAIlC,QAAQmC,UAAUR,EAAQP,gBAAgBgB,cAC3B,UAAjBT,EAAQC,MAAqC,aAAjBD,EAAQC,KAAqB,CACzD,GAAIS,GAAKC,SAASC,cAAc,MAChCF,GAAGG,YAAYxC,QAAQyC,QAAQf,GAAU,GACzC,IAAIgB,GAAW1C,QAAQyC,QAAQJ,EAAGM,iBAAiB,cACnD,OAAID,IACFL,EAAGG,YAAYxC,QAAQyC,QACrB,UAAYP,EAAMxC,GAAK,gFAKvB,IACFgD,EAASE,KAAK,mBAAoBV,EAAMxC,GAAK,gBACtC2C,EAAGQ,WAEHnB,EAGT,MAAOA,KX+GZO,EAA0BF,SAAW,gBWtItC3B,EAAS4B,IAAIC,KX+JT,SAASnD,EAAQD,EAASU,GYhKhC,YAEA,IAAIuD,GAAkB,SAAUC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,EAAI,WAAaA,GCFhFE,EAAMH,EAAAvD,EAAM,IACZ6C,EAAWU,EAAAvD,EAAM,GDOxBT,GAAOD,QCLQ,SAAAuB,GACb6C,EAAO7C,GACPgC,EAAYhC,KbkLR,SAAStB,EAAQD,EAASU,GcvLhC,Yd2LCT,GAAOD,QAAU,SAAUuB,GexL1B,QAAS8C,GAAgBC,GACvBA,EAAqBC,SACnBC,KAAM,WACN3B,SAAUnC,EAAQ,IAClB+D,SAAU,oBACVC,SAAU,SAAAC,GDGR,OCFApC,iBACEqC,MAAOD,EAAMzC,YfkLpBmC,EAAgBnB,SAAW,wBe3L5B3B,EAASsD,OAAOR,KfgNZ,SAASpE,EAAQD,EAASU,GgBjNhC,YAEAT,GAAOD,QCFQ,SAAAuB,GACbb,EAAQ,GAAca,GACtBb,EAAQ,GAAmBa,GAC3Bb,EAAQ,GAAWa,GACnBb,EAAQ,IAAWa,GACnBb,EAAQ,IAAYa,GACpBb,EAAQ,IAAca,KjB0NlB,SAAStB,EAAQD,GkBhOvB,YlBoOCC,GAAOD,QAAU,SAAUuB,GmBjO1B,QAASuD,GAAaR,GACpBA,EAAqBC,SACnBC,KAAM,QACN3B,SAAU,wCACV4B,SAAU,gBAAiB,oBAC3BM,gBACExC,iBAAmBQ,KAAM,WnB4N9B+B,EAAa5B,SAAW,wBmBpOzB3B,EAASsD,OAAOC,KnBqPZ,SAAS7E,EAAQD,EAASU,GoBtPhC,YpB0PCT,GAAOD,QAAU,SAAUuB,GqBvP1B,QAAS8C,GAAgBC,GACvBA,EAAqBC,SACnBC,KAAM,gBACN3B,SAAUnC,EAAQ,IAClB+D,SAAU,gBAAiB,oBAC3BM,gBACEC,eAAe,GAEjBN,SAAU,SAAAC,GDGR,OCFApC,iBACEO,QAAS6B,EAAMM,QAAQN,EAAMO,QAC7BC,UAAWR,EAAMzC,OAAOC,SACxBiD,UAAWT,EAAMzC,OAAOC,YAG5BkD,YAAA,SAA4B,SAASC,GAiBnC,QAASC,KACPD,EAAOE,MAAMC,EAAKC,QAClBvE,QAAQwE,QAAQL,EAAOM,cAAcC,QAAS,SAACC,EAAUC,GACnDD,GACFR,EAAOE,MAAMC,EAAKC,KAAK9C,KAAKoD,EAAGlD,QAAQiD,GAAOC,EAAGZ,WAAa,YApBpE,GAAMY,GAAKV,EAAOU,GACZP,EAAOH,EAAOxC,OACpBwC,GAAOM,eACLC,WACAI,OAAQV,EAIV,IAAMW,GAAaZ,EAAOE,MAAMC,EAAKC,IACjCvE,SAAQgF,QAAQD,KDKlB,WCJA,GAAMd,GAAYY,EAAGZ,WAAa,OAClCjE,SAAQwE,QAAQK,EAAGlD,QAAS,SAASsD,EAAGL,GACtCT,EAAOM,cAAcC,QAAQE,GAA8C,KAArCG,EAAWG,QAAQD,EAAEhB,arB4NpEf,EAAgBnB,SAAW,wBqB1P5B3B,EAASsD,OAAOR,KrBgTZ,SAASpE,EAAQD,EAASU,GsBjThC,YtBqTCT,GAAOD,QAAU,SAAUuB,GuBlT1B,QAAS+E,GAAahC,GACpBA,EAAqBC,SACnBC,KAAM,QACN3B,SAAUnC,EAAQ,IAClB+D,SAAU,gBAAiB,oBAC3BM,gBACEC,eAAe,GAEjBN,SAAU,SAAAC,GDGR,OCFApC,iBACEO,QAAS6B,EAAMM,QAAQN,EAAMO,QAC7BC,UAAWR,EAAMzC,OAAOC,SACxBiD,UAAWT,EAAMzC,OAAOC,cvBuS/BmE,EAAapD,SAAW,wBuBrTzB3B,EAASsD,OAAOyB,KvB+UZ,SAASrG,EAAQD,EAASU,GwBhVhC,YxBoVCT,GAAOD,QAAU,SAAUuB,GyBjV1B,QAASgF,GAAcjC,GACrBA,EAAqBC,SACnBC,KAAM,SACN3B,SAAUnC,EAAQ,IAClB+D,SAAU,gBAAiB,oBAC3BC,SAAU,SAAAC,GDGR,OCFApC,iBACEO,QAAS6B,EAAMM,QAAQN,EAAMO,QAC7BC,UAAWR,EAAMzC,OAAOC,SACxBiD,UAAWT,EAAMzC,OAAOC,SACxBqE,UAAW7B,EAAMzC,OAAOC,czBwU/BoE,EAAcrD,SAAW,wByBpV1B3B,EAASsD,OAAO0B,KzB4WZ,SAAStG,EAAQD,G0B7WvB,Y1BiXCC,GAAOD,QAAU,SAAUuB,G2B9W1B,QAASkF,GAAgBnC,GACvBA,EAAqBC,SACnBC,KAAM,WACN3B,SAAU,+DACV4B,SAAU,gBAAiB,oBAC3BM,gBACE2B,cACEC,MAAOC,UAAW,QAClBC,MAAOD,UAAW,UAGtBlC,SAAU,SAAAC,GDGR,OCFApC,iBACEoE,KAAMhC,EAAMmC,OAAO3E,SACnB0E,KAAMlC,EAAMmC,OAAO3E,c3BiW1BsE,EAAgBvD,SAAW,wB2BjX5B3B,EAASsD,OAAO4B,K3B6YZ,SAASxG,EAAQD,EAASU,G4B9YhC,Y5BkZCT,GAAOD,QAAU,SAAUuB,G6B/Y1B,QAASwF,GAAYzC,GACnBA,EAAqB0C,aAEjBxC,KAAM,gBACN3B,SAAUnC,EAAQ,IAClBgE,SAAU,SAAAC,GDEV,OCDEpC,iBACEqC,MAAOD,EAAMzC,OACb+E,SAAUtC,EAAMuC,KAAK/E,cAI1BqC,KAAM,mBAAoB3B,SAAUnC,EAAQ,O7BoYhDqG,EAAY7D,SAAW,wB6BlZxB3B,EAASsD,OAAOkC,K7BuaZ,SAAS9G,EAAQD,G8BxavBC,EAAAD,QAAA,ggB9B8aM,SAASC,EAAQD,G+B9avBC,EAAAD,QAAA,wN/BobM,SAASC,EAAQD,GgCpbvBC,EAAAD,QAAA,wThC0bM,SAASC,EAAQD,GiC1bvBC,EAAAD,QAAA,0UjCgcM,SAASC,EAAQD,GkChcvBC,EAAAD,QAAA,gNlCscM,SAASC,EAAQD,GmCtcvBC,EAAAD,QAAA,6GnC4cM,SAASC,EAAQD,GoC5cvBC,EAAAD,QAAA,wIpCkdM,SAASC,EAAQD,GqCldvBC,EAAAD,QAAAM,GrCwdM,SAASL,EAAQD,GsCxdvBC,EAAAD,QAAAO,GtC8dM,SAASN,EAAQD,GuC9dvBC,EAAAD,QAAAQ","file":"angular-formly-templates-foundation.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"api-check\", \"angular-formly\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTemplatesFoundation\"] = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse\n\t\troot[\"ngFormlyTemplatesFoundation\"] = factory(root[\"angular\"], root[\"apiCheck\"], root[\"ngFormly\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"api-check\", \"angular-formly\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngFormlyTemplatesFoundation\"] = factory(require(\"angular\"), require(\"api-check\"), require(\"angular-formly\"));\n\telse\n\t\troot[\"ngFormlyTemplatesFoundation\"] = factory(root[\"angular\"], root[\"apiCheck\"], root[\"ngFormly\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = __webpack_require__(2);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// some versions of angular don't export the angular module properly,\n\t// so we get it from window in this case.\n\t\"use strict\";\n\t\n\tvar angular = __webpack_require__(21);\n\tif (!angular.version) {\n\t  angular = window.angular;\n\t}\n\tmodule.exports = angular;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar ngModuleName = \"formlyFoundation\";\n\tvar angular = __webpack_require__(1);\n\tvar ngModule = angular.module(ngModuleName, [__webpack_require__(23)]);\n\tngModule.constant(\"formlyFoundationApiCheck\", __webpack_require__(22)({\n\t  output: {\n\t    prefix: \"angular-formly-foundation\"\n\t  }\n\t}));\n\tngModule.constant(\"formlyFoundationVersion\", (\"1.0.0-beta.2\"));\n\t\n\t__webpack_require__(13)(ngModule);\n\t__webpack_require__(7)(ngModule);\n\t__webpack_require__(5)(ngModule);\n\t\n\tmodule.exports = ngModuleName;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  addAddonsManipulator.$inject = [\"formlyConfig\", \"formlyFoundationApiCheck\"];\n\t  ngModule.run(addAddonsManipulator);\n\t\n\t  function addAddonsManipulator(formlyConfig, formlyFoundationApiCheck) {\n\t    var addonTemplate = __webpack_require__(14);\n\t    var addonChecker = formlyFoundationApiCheck.shape({\n\t      \"class\": formlyFoundationApiCheck.string.optional,\n\t      text: formlyFoundationApiCheck.string.optional\n\t    }).strict.optional;\n\t    var api = formlyFoundationApiCheck.shape({\n\t      templateOptions: formlyFoundationApiCheck.shape({\n\t        addonLeft: addonChecker,\n\t        addonRight: addonChecker\n\t      })\n\t    });\n\t    formlyConfig.templateManipulators.preWrapper.push(function (template, options) {\n\t      if (options.type !== \"input\" || !options.templateOptions.addonLeft && !options.templateOptions.addonRight) {\n\t        return template;\n\t      }\n\t      formlyFoundationApiCheck.warn([api], [options]);\n\t      return addonTemplate.replace(\"<formly-transclude></formly-transclude>\", template);\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  addDescriptionManipulator.$inject = [\"formlyConfig\"];\n\t  ngModule.run(addDescriptionManipulator);\n\t\n\t  function addDescriptionManipulator(formlyConfig) {\n\t    formlyConfig.templateManipulators.preWrapper.push(function ariaDescribedBy(template, options, scope) {\n\t      if (angular.isDefined(options.templateOptions.description) && options.type !== \"radio\" && options.type !== \"checkbox\") {\n\t        var el = document.createElement(\"div\");\n\t        el.appendChild(angular.element(template)[0]);\n\t        var modelEls = angular.element(el.querySelectorAll(\"[ng-model]\"));\n\t        if (modelEls) {\n\t          el.appendChild(angular.element(\"<p id=\\\"\" + scope.id + \"_description\\\"\" + \"class=\\\"help-block\\\"\" + \"ng-if=\\\"to.description\\\">\" + \"{{to.description}}\" + \"</p>\")[0]);\n\t          modelEls.attr(\"aria-describedby\", scope.id + \"_description\");\n\t          return el.innerHTML;\n\t        } else {\n\t          return template;\n\t        }\n\t      } else {\n\t        return template;\n\t      }\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar addons = _interopRequire(__webpack_require__(3));\n\t\n\tvar description = _interopRequire(__webpack_require__(4));\n\t\n\tmodule.exports = function (ngModule) {\n\t  addons(ngModule);\n\t  description(ngModule);\n\t};\n\t\n\t//export default ngModule => {\n\t//  require('./addons')(ngModule);\n\t//  require('./description')(ngModule);\n\t//};\n\t//\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  addCheckboxType.$inject = [\"formlyConfigProvider\"];\n\t  ngModule.config(addCheckboxType);\n\t\n\t  function addCheckboxType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: \"checkbox\",\n\t      template: __webpack_require__(15),\n\t      wrapper: [\"templateHasError\"],\n\t      apiCheck: function (check) {\n\t        return {\n\t          templateOptions: {\n\t            label: check.string\n\t          }\n\t        };\n\t      }\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  __webpack_require__(6)(ngModule);\n\t  __webpack_require__(9)(ngModule);\n\t  __webpack_require__(8)(ngModule);\n\t  __webpack_require__(10)(ngModule);\n\t  __webpack_require__(11)(ngModule);\n\t  __webpack_require__(12)(ngModule);\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  addInputType.$inject = [\"formlyConfigProvider\"];\n\t  ngModule.config(addInputType);\n\t\n\t  function addInputType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: \"input\",\n\t      template: \"<input ng-model=\\\"model[options.key]\\\">\",\n\t      wrapper: [\"templateLabel\", \"templateHasError\"],\n\t      defaultOptions: {\n\t        templateOptions: { type: \"text\" }\n\t      }\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  addCheckboxType.$inject = [\"formlyConfigProvider\"];\n\t  ngModule.config(addCheckboxType);\n\t\n\t  function addCheckboxType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: \"multiCheckbox\",\n\t      template: __webpack_require__(16),\n\t      wrapper: [\"templateLabel\", \"templateHasError\"],\n\t      defaultOptions: {\n\t        noFormControl: false\n\t      },\n\t      apiCheck: function (check) {\n\t        return {\n\t          templateOptions: {\n\t            options: check.arrayOf(check.object),\n\t            labelProp: check.string.optional,\n\t            valueProp: check.string.optional\n\t          }\n\t        };\n\t      },\n\t      controller: /* @ngInject */[\"$scope\", function controller($scope) {\n\t        var to = $scope.to;\n\t        var opts = $scope.options;\n\t        $scope.multiCheckbox = {\n\t          checked: [],\n\t          change: setModel\n\t        };\n\t\n\t        // initialize the checkboxes check property\n\t        var modelValue = $scope.model[opts.key];\n\t        if (angular.isArray(modelValue)) {\n\t          (function () {\n\t            var valueProp = to.valueProp || \"value\";\n\t            angular.forEach(to.options, function (v, index) {\n\t              $scope.multiCheckbox.checked[index] = modelValue.indexOf(v[valueProp]) !== -1;\n\t            });\n\t          })();\n\t        }\n\t\n\t        function setModel() {\n\t          $scope.model[opts.key] = [];\n\t          angular.forEach($scope.multiCheckbox.checked, function (checkbox, index) {\n\t            if (checkbox) {\n\t              $scope.model[opts.key].push(to.options[index][to.valueProp || \"value\"]);\n\t            }\n\t          });\n\t        }\n\t      }]\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  addRadioType.$inject = [\"formlyConfigProvider\"];\n\t  ngModule.config(addRadioType);\n\t\n\t  function addRadioType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: \"radio\",\n\t      template: __webpack_require__(17),\n\t      wrapper: [\"templateLabel\", \"templateHasError\"],\n\t      defaultOptions: {\n\t        noFormControl: false\n\t      },\n\t      apiCheck: function (check) {\n\t        return {\n\t          templateOptions: {\n\t            options: check.arrayOf(check.object),\n\t            labelProp: check.string.optional,\n\t            valueProp: check.string.optional\n\t          }\n\t        };\n\t      }\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  addSelectType.$inject = [\"formlyConfigProvider\"];\n\t  ngModule.config(addSelectType);\n\t\n\t  function addSelectType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: \"select\",\n\t      template: __webpack_require__(18),\n\t      wrapper: [\"templateLabel\", \"templateHasError\"],\n\t      apiCheck: function (check) {\n\t        return {\n\t          templateOptions: {\n\t            options: check.arrayOf(check.object),\n\t            labelProp: check.string.optional,\n\t            valueProp: check.string.optional,\n\t            groupProp: check.string.optional\n\t          }\n\t        };\n\t      }\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  addTextareaType.$inject = [\"formlyConfigProvider\"];\n\t  ngModule.config(addTextareaType);\n\t\n\t  function addTextareaType(formlyConfigProvider) {\n\t    formlyConfigProvider.setType({\n\t      name: \"textarea\",\n\t      template: \"<textarea class=\\\"\\\" ng-model=\\\"model[options.key]\\\"></textarea>\",\n\t      wrapper: [\"templateLabel\", \"templateHasError\"],\n\t      defaultOptions: {\n\t        ngModelAttrs: {\n\t          rows: { attribute: \"rows\" },\n\t          cols: { attribute: \"cols\" }\n\t        }\n\t      },\n\t      apiCheck: function (check) {\n\t        return {\n\t          templateOptions: {\n\t            rows: check.number.optional,\n\t            cols: check.number.optional\n\t          }\n\t        };\n\t      }\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (ngModule) {\n\t  addWrappers.$inject = [\"formlyConfigProvider\"];\n\t  ngModule.config(addWrappers);\n\t\n\t  function addWrappers(formlyConfigProvider) {\n\t    formlyConfigProvider.setWrapper([{\n\t      name: \"templateLabel\",\n\t      template: __webpack_require__(20),\n\t      apiCheck: function (check) {\n\t        return {\n\t          templateOptions: {\n\t            label: check.string,\n\t            required: check.bool.optional\n\t          }\n\t        };\n\t      }\n\t    }, { name: \"templateHasError\", template: __webpack_require__(19) }]);\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div ng-class=\\\"{'': to.addonLeft || to.addonRight}\\\">\\n    <div class=\\\"\\\" ng-if=\\\"to.addonLeft\\\">\\n        <i class=\\\"{{to.addonLeft.class}}\\\" ng-if=\\\"to.addonLeft.class\\\"></i>\\n        <span ng-if=\\\"to.addonLeft.text\\\">{{to.addonLeft.text}}</span>\\n    </div>\\n    <formly-transclude></formly-transclude>\\n    <div class=\\\"\\\" ng-if=\\\"to.addonRight\\\">\\n        <i class=\\\"{{to.addonRight.class}}\\\" ng-if=\\\"to.addonRight.class\\\"></i>\\n        <span ng-if=\\\"to.addonRight.text\\\">{{to.addonRight.text}}</span>\\n    </div>\\n</div>\"\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"checkbox\\\">\\n\\t<label>\\n\\t\\t<input type=\\\"checkbox\\\"\\n           class=\\\"formly-field-checkbox\\\"\\n\\t\\t       ng-model=\\\"model[options.key]\\\">\\n\\t\\t{{to.label}}\\n\\t\\t{{to.required ? '*' : ''}}\\n\\t</label>\\n</div>\\n\"\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"checkbox\\\">\\n  <label>\\n    <input type=\\\"checkbox\\\"\\n           id=\\\"{{id + '_'+ $index}}\\\"\\n           ng-model=\\\"multiCheckbox.checked[$index]\\\"\\n           ng-change=\\\"multiCheckbox.change()\\\">\\n      {{option[to.labelProp || 'name']}}\\n  </label>\\n</div>\\n\"\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"radio\\\">\\n  <label>\\n    <input type=\\\"radio\\\"\\n           id=\\\"{{id + '_'+ $index}}\\\"\\n           tabindex=\\\"0\\\"\\n           ng-value=\\\"option[to.valueProp || 'value']\\\"\\n           ng-model=\\\"model[options.key]\\\">\\n      {{option[to.labelProp || 'name']}}\\n  </label>\\n</div>\\n\"\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<select\\n  ng-model=\\\"model[options.key]\\\"\\n  ng-options=\\\"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\\\">\\n</select>\"\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"\\\" ng-class=\\\"{'has-error': showError}\\\">\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<label for=\\\"{{id}}\\\" class=\\\"\\\">\\n  {{to.label}}\\n  {{to.required ? '*' : ''}}\\n</label>\\n<formly-transclude></formly-transclude>\\n\"\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-formly-templates-foundation.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 822fcbc746ea2245b56e\n **/","\"use strict\";\n\nmodule.exports = require(\"./index.common\");\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","module.exports = require('./index.common');\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./index.js\n **/","// some versions of angular don't export the angular module properly,\n// so we get it from window in this case.\n\"use strict\";\n\nvar angular = require(\"angular\");\nif (!angular.version) {\n  angular = window.angular;\n}\nmodule.exports = angular;\n\n\n/** WEBPACK FOOTER **\n ** ./angular-fix/index.js\n **/","// some versions of angular don't export the angular module properly,\n// so we get it from window in this case.\nvar angular = require('angular');\nif (!angular.version) {\n  angular = window.angular;\n}\nmodule.exports = angular;\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./angular-fix/index.js\n **/","\"use strict\";\n\nvar ngModuleName = \"formlyFoundation\";\nvar angular = require(\"./angular-fix\");\nvar ngModule = angular.module(ngModuleName, [require(\"angular-formly\")]);\nngModule.constant(\"formlyFoundationApiCheck\", require(\"api-check\")({\n  output: {\n    prefix: \"angular-formly-foundation\"\n  }\n}));\nngModule.constant(\"formlyFoundationVersion\", VERSION);\n\nrequire(\"./wrappers\")(ngModule);\nrequire(\"./types\")(ngModule);\nrequire(\"./run\")(ngModule);\n\nmodule.exports = ngModuleName;\n\n\n/** WEBPACK FOOTER **\n ** ./index.common.js\n **/","const ngModuleName = 'formlyFoundation';\nconst angular = require('./angular-fix');\nconst ngModule = angular.module(ngModuleName, [require('angular-formly')]);\nngModule.constant(\n  'formlyFoundationApiCheck',\n  require('api-check')({\n    output: {\n      prefix: 'angular-formly-foundation'\n    }\n  })\n);\nngModule.constant('formlyFoundationVersion', VERSION);\n\nrequire('./wrappers')(ngModule);\nrequire('./types')(ngModule);\nrequire('./run')(ngModule);\n\nexport default ngModuleName;\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./index.common.js\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.run(addAddonsManipulator);\n\n  function addAddonsManipulator(formlyConfig, formlyFoundationApiCheck) {\n    var addonTemplate = require(\"./addons.html\");\n    var addonChecker = formlyFoundationApiCheck.shape({\n      \"class\": formlyFoundationApiCheck.string.optional,\n      text: formlyFoundationApiCheck.string.optional\n    }).strict.optional;\n    var api = formlyFoundationApiCheck.shape({\n      templateOptions: formlyFoundationApiCheck.shape({\n        addonLeft: addonChecker,\n        addonRight: addonChecker\n      })\n    });\n    formlyConfig.templateManipulators.preWrapper.push(function (template, options) {\n      if (options.type !== \"input\" || !options.templateOptions.addonLeft && !options.templateOptions.addonRight) {\n        return template;\n      }\n      formlyFoundationApiCheck.warn([api], [options]);\n      return addonTemplate.replace(\"<formly-transclude></formly-transclude>\", template);\n    });\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./run/addons.js\n **/","export default ngModule => {\n  ngModule.run(addAddonsManipulator);\n\n  function addAddonsManipulator(formlyConfig, formlyFoundationApiCheck) {\n    var addonTemplate = require('./addons.html');\n    const addonChecker = formlyFoundationApiCheck.shape({\n      class: formlyFoundationApiCheck.string.optional,\n      text: formlyFoundationApiCheck.string.optional\n    }).strict.optional;\n    const api = formlyFoundationApiCheck.shape({\n      templateOptions: formlyFoundationApiCheck.shape({\n        addonLeft: addonChecker,\n        addonRight: addonChecker\n      })\n    });\n    formlyConfig.templateManipulators.preWrapper.push(function(template, options) {\n      if (options.type !== 'input' || (!options.templateOptions.addonLeft && !options.templateOptions.addonRight)) {\n        return template;\n      }\n      formlyFoundationApiCheck.warn([api], [options]);\n      return addonTemplate.replace('<formly-transclude></formly-transclude>', template);\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./run/addons.js\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.run(addDescriptionManipulator);\n\n  function addDescriptionManipulator(formlyConfig) {\n    formlyConfig.templateManipulators.preWrapper.push(function ariaDescribedBy(template, options, scope) {\n      if (angular.isDefined(options.templateOptions.description) && options.type !== \"radio\" && options.type !== \"checkbox\") {\n        var el = document.createElement(\"div\");\n        el.appendChild(angular.element(template)[0]);\n        var modelEls = angular.element(el.querySelectorAll(\"[ng-model]\"));\n        if (modelEls) {\n          el.appendChild(angular.element(\"<p id=\\\"\" + scope.id + \"_description\\\"\" + \"class=\\\"help-block\\\"\" + \"ng-if=\\\"to.description\\\">\" + \"{{to.description}}\" + \"</p>\")[0]);\n          modelEls.attr(\"aria-describedby\", scope.id + \"_description\");\n          return el.innerHTML;\n        } else {\n          return template;\n        }\n      } else {\n        return template;\n      }\n    });\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./run/description.js\n **/","export default ngModule => {\n  ngModule.run(addDescriptionManipulator);\n\n  function addDescriptionManipulator(formlyConfig) {\n    formlyConfig.templateManipulators.preWrapper.push(function ariaDescribedBy(template, options, scope) {\n      if (angular.isDefined(options.templateOptions.description) &&\n        options.type !== 'radio' && options.type !== 'checkbox') {\n        var el = document.createElement('div');\n        el.appendChild(angular.element(template)[0]);\n        var modelEls = angular.element(el.querySelectorAll('[ng-model]'));\n        if (modelEls) {\n          el.appendChild(angular.element(\n            '<p id=\"' + scope.id + '_description\"' +\n            'class=\"help-block\"' +\n            'ng-if=\"to.description\">' +\n            '{{to.description}}' +\n            '</p>'\n          )[0]);\n          modelEls.attr('aria-describedby', scope.id + '_description');\n          return el.innerHTML;\n        } else {\n          return template;\n        }\n      } else {\n        return template;\n      }\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./run/description.js\n **/","\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar addons = _interopRequire(require(\"./addons\"));\n\nvar description = _interopRequire(require(\"./description\"));\n\nmodule.exports = function (ngModule) {\n  addons(ngModule);\n  description(ngModule);\n};\n\n//export default ngModule => {\n//  require('./addons')(ngModule);\n//  require('./description')(ngModule);\n//};\n//\n\n\n/** WEBPACK FOOTER **\n ** ./run/index.js\n **/","import addons from './addons';\nimport description from './description';\n\nexport default ngModule => {\n  addons(ngModule);\n  description(ngModule);\n};\n\n//export default ngModule => {\n//  require('./addons')(ngModule);\n//  require('./description')(ngModule);\n//};\n//\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./run/index.js\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addCheckboxType);\n\n  function addCheckboxType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: \"checkbox\",\n      template: require(\"./checkbox.html\"),\n      wrapper: [\"templateHasError\"],\n      apiCheck: function (check) {\n        return {\n          templateOptions: {\n            label: check.string\n          }\n        };\n      }\n    });\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./types/checkbox.js\n **/","export default ngModule => {\n  ngModule.config(addCheckboxType);\n\n  function addCheckboxType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'checkbox',\n      template: require('./checkbox.html'),\n      wrapper: ['templateHasError'],\n      apiCheck: check => ({\n        templateOptions: {\n          label: check.string\n        }\n      })\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/checkbox.js\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  require(\"./checkbox\")(ngModule);\n  require(\"./multiCheckbox\")(ngModule);\n  require(\"./input\")(ngModule);\n  require(\"./radio\")(ngModule);\n  require(\"./select\")(ngModule);\n  require(\"./textarea\")(ngModule);\n};\n\n\n/** WEBPACK FOOTER **\n ** ./types/index.js\n **/","export default ngModule => {\n  require('./checkbox')(ngModule);\n  require('./multiCheckbox')(ngModule);\n  require('./input')(ngModule);\n  require('./radio')(ngModule);\n  require('./select')(ngModule);\n  require('./textarea')(ngModule);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/index.js\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addInputType);\n\n  function addInputType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: \"input\",\n      template: \"<input ng-model=\\\"model[options.key]\\\">\",\n      wrapper: [\"templateLabel\", \"templateHasError\"],\n      defaultOptions: {\n        templateOptions: { type: \"text\" }\n      }\n    });\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./types/input.js\n **/","export default ngModule => {\n  ngModule.config(addInputType);\n\n  function addInputType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'input',\n      template: '<input ng-model=\"model[options.key]\">',\n      wrapper: ['templateLabel', 'templateHasError' ],\n      defaultOptions: {\n        templateOptions: { type: 'text' }\n      }\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/input.js\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addCheckboxType);\n\n  function addCheckboxType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: \"multiCheckbox\",\n      template: require(\"./multiCheckbox.html\"),\n      wrapper: [\"templateLabel\", \"templateHasError\"],\n      defaultOptions: {\n        noFormControl: false\n      },\n      apiCheck: function (check) {\n        return {\n          templateOptions: {\n            options: check.arrayOf(check.object),\n            labelProp: check.string.optional,\n            valueProp: check.string.optional\n          }\n        };\n      },\n      controller: /* @ngInject */function controller($scope) {\n        var to = $scope.to;\n        var opts = $scope.options;\n        $scope.multiCheckbox = {\n          checked: [],\n          change: setModel\n        };\n\n        // initialize the checkboxes check property\n        var modelValue = $scope.model[opts.key];\n        if (angular.isArray(modelValue)) {\n          (function () {\n            var valueProp = to.valueProp || \"value\";\n            angular.forEach(to.options, function (v, index) {\n              $scope.multiCheckbox.checked[index] = modelValue.indexOf(v[valueProp]) !== -1;\n            });\n          })();\n        }\n\n        function setModel() {\n          $scope.model[opts.key] = [];\n          angular.forEach($scope.multiCheckbox.checked, function (checkbox, index) {\n            if (checkbox) {\n              $scope.model[opts.key].push(to.options[index][to.valueProp || \"value\"]);\n            }\n          });\n        }\n      }\n    });\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./types/multiCheckbox.js\n **/","export default ngModule => {\n  ngModule.config(addCheckboxType);\n\n  function addCheckboxType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'multiCheckbox',\n      template: require('./multiCheckbox.html'),\n      wrapper: ['templateLabel', 'templateHasError'],\n      defaultOptions: {\n        noFormControl: false\n      },\n      apiCheck: check => ({\n        templateOptions: {\n          options: check.arrayOf(check.object),\n          labelProp: check.string.optional,\n          valueProp: check.string.optional\n        }\n      }),\n      controller: /* @ngInject */ function($scope) {\n        const to = $scope.to;\n        const opts = $scope.options;\n        $scope.multiCheckbox = {\n          checked: [],\n          change: setModel\n        };\n\n        // initialize the checkboxes check property\n        const modelValue = $scope.model[opts.key];\n        if (angular.isArray(modelValue)) {\n          const valueProp = to.valueProp || 'value';\n          angular.forEach(to.options, function(v, index) {\n            $scope.multiCheckbox.checked[index] = modelValue.indexOf(v[valueProp]) !== -1;\n          });\n        }\n\n        function setModel() {\n          $scope.model[opts.key] = [];\n          angular.forEach($scope.multiCheckbox.checked, (checkbox, index) => {\n            if (checkbox) {\n              $scope.model[opts.key].push(to.options[index][to.valueProp || 'value']);\n            }\n          });\n        }\n      }\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/multiCheckbox.js\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addRadioType);\n\n  function addRadioType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: \"radio\",\n      template: require(\"./radio.html\"),\n      wrapper: [\"templateLabel\", \"templateHasError\"],\n      defaultOptions: {\n        noFormControl: false\n      },\n      apiCheck: function (check) {\n        return {\n          templateOptions: {\n            options: check.arrayOf(check.object),\n            labelProp: check.string.optional,\n            valueProp: check.string.optional\n          }\n        };\n      }\n    });\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./types/radio.js\n **/","export default ngModule => {\n  ngModule.config(addRadioType);\n\n  function addRadioType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'radio',\n      template: require('./radio.html'),\n      wrapper: ['templateLabel', 'templateHasError'],\n      defaultOptions: {\n        noFormControl: false\n      },\n      apiCheck: check => ({\n        templateOptions: {\n          options: check.arrayOf(check.object),\n          labelProp: check.string.optional,\n          valueProp: check.string.optional\n        }\n      })\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/radio.js\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addSelectType);\n\n  function addSelectType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: \"select\",\n      template: require(\"./select.html\"),\n      wrapper: [\"templateLabel\", \"templateHasError\"],\n      apiCheck: function (check) {\n        return {\n          templateOptions: {\n            options: check.arrayOf(check.object),\n            labelProp: check.string.optional,\n            valueProp: check.string.optional,\n            groupProp: check.string.optional\n          }\n        };\n      }\n    });\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./types/select.js\n **/","export default  ngModule => {\n  ngModule.config(addSelectType);\n\n  function addSelectType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'select',\n      template: require('./select.html'),\n      wrapper: ['templateLabel', 'templateHasError'],\n      apiCheck: check => ({\n        templateOptions: {\n          options: check.arrayOf(check.object),\n          labelProp: check.string.optional,\n          valueProp: check.string.optional,\n          groupProp: check.string.optional\n        }\n      })\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/select.js\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addTextareaType);\n\n  function addTextareaType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: \"textarea\",\n      template: \"<textarea class=\\\"\\\" ng-model=\\\"model[options.key]\\\"></textarea>\",\n      wrapper: [\"templateLabel\", \"templateHasError\"],\n      defaultOptions: {\n        ngModelAttrs: {\n          rows: { attribute: \"rows\" },\n          cols: { attribute: \"cols\" }\n        }\n      },\n      apiCheck: function (check) {\n        return {\n          templateOptions: {\n            rows: check.number.optional,\n            cols: check.number.optional\n          }\n        };\n      }\n    });\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./types/textarea.js\n **/","export default  ngModule => {\n  ngModule.config(addTextareaType);\n\n  function addTextareaType(formlyConfigProvider) {\n    formlyConfigProvider.setType({\n      name: 'textarea',\n      template: '<textarea class=\"\" ng-model=\"model[options.key]\"></textarea>',\n      wrapper: ['templateLabel', 'templateHasError'],\n      defaultOptions: {\n        ngModelAttrs: {\n          rows: {attribute: 'rows'},\n          cols: {attribute: 'cols'}\n        }\n      },\n      apiCheck: check => ({\n        templateOptions: {\n          rows: check.number.optional,\n          cols: check.number.optional\n        }\n      })\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./types/textarea.js\n **/","\"use strict\";\n\nmodule.exports = function (ngModule) {\n  ngModule.config(addWrappers);\n\n  function addWrappers(formlyConfigProvider) {\n    formlyConfigProvider.setWrapper([{\n      name: \"templateLabel\",\n      template: require(\"./label.html\"),\n      apiCheck: function (check) {\n        return {\n          templateOptions: {\n            label: check.string,\n            required: check.bool.optional\n          }\n        };\n      }\n    }, { name: \"templateHasError\", template: require(\"./has-error.html\") }]);\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ./wrappers/index.js\n **/","export default ngModule => {\n  ngModule.config(addWrappers);\n\n  function addWrappers(formlyConfigProvider) {\n    formlyConfigProvider.setWrapper([\n      {\n        name: 'templateLabel',\n        template: require('./label.html'),\n        apiCheck: check => ({\n          templateOptions: {\n            label: check.string,\n            required: check.bool.optional\n          }\n        })\n      },\n      {name: 'templateHasError', template: require('./has-error.html')}\n    ]);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/jshint-loader!./wrappers/index.js\n **/","module.exports = \"<div ng-class=\\\"{'': to.addonLeft || to.addonRight}\\\">\\n    <div class=\\\"\\\" ng-if=\\\"to.addonLeft\\\">\\n        <i class=\\\"{{to.addonLeft.class}}\\\" ng-if=\\\"to.addonLeft.class\\\"></i>\\n        <span ng-if=\\\"to.addonLeft.text\\\">{{to.addonLeft.text}}</span>\\n    </div>\\n    <formly-transclude></formly-transclude>\\n    <div class=\\\"\\\" ng-if=\\\"to.addonRight\\\">\\n        <i class=\\\"{{to.addonRight.class}}\\\" ng-if=\\\"to.addonRight.class\\\"></i>\\n        <span ng-if=\\\"to.addonRight.text\\\">{{to.addonRight.text}}</span>\\n    </div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./run/addons.html\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"checkbox\\\">\\n\\t<label>\\n\\t\\t<input type=\\\"checkbox\\\"\\n           class=\\\"formly-field-checkbox\\\"\\n\\t\\t       ng-model=\\\"model[options.key]\\\">\\n\\t\\t{{to.label}}\\n\\t\\t{{to.required ? '*' : ''}}\\n\\t</label>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/checkbox.html\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = \"<div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"checkbox\\\">\\n  <label>\\n    <input type=\\\"checkbox\\\"\\n           id=\\\"{{id + '_'+ $index}}\\\"\\n           ng-model=\\\"multiCheckbox.checked[$index]\\\"\\n           ng-change=\\\"multiCheckbox.change()\\\">\\n      {{option[to.labelProp || 'name']}}\\n  </label>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/multiCheckbox.html\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = \"<div ng-repeat=\\\"(key, option) in to.options\\\" class=\\\"radio\\\">\\n  <label>\\n    <input type=\\\"radio\\\"\\n           id=\\\"{{id + '_'+ $index}}\\\"\\n           tabindex=\\\"0\\\"\\n           ng-value=\\\"option[to.valueProp || 'value']\\\"\\n           ng-model=\\\"model[options.key]\\\">\\n      {{option[to.labelProp || 'name']}}\\n  </label>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/radio.html\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = \"<select\\n  ng-model=\\\"model[options.key]\\\"\\n  ng-options=\\\"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\\\">\\n</select>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./types/select.html\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"\\\" ng-class=\\\"{'has-error': showError}\\\">\\n  <formly-transclude></formly-transclude>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wrappers/has-error.html\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = \"<label for=\\\"{{id}}\\\" class=\\\"\\\">\\n  {{to.label}}\\n  {{to.required ? '*' : ''}}\\n</label>\\n<formly-transclude></formly-transclude>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./wrappers/label.html\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"apiCheck\",\"amd\":\"api-check\",\"commonjs2\":\"api-check\",\"commonjs\":\"api-check\"}\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"ngFormly\",\"amd\":\"angular-formly\",\"commonjs2\":\"angular-formly\",\"commonjs\":\"angular-formly\"}\n ** module id = 23\n ** module chunks = 0\n **/"],"sourceRoot":""}